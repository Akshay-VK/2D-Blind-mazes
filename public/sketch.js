/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mazeGeneration_mazeGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mazeGeneration/mazeGenerator */ \"./src/mazeGeneration/mazeGenerator.ts\");\n/* harmony import */ var _screen_Canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./screen/Canvas */ \"./src/screen/Canvas.ts\");\n/* harmony import */ var _screen_Dither__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./screen/Dither */ \"./src/screen/Dither.ts\");\n/* harmony import */ var _screen_LightSheet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./screen/LightSheet */ \"./src/screen/LightSheet.ts\");\n/* harmony import */ var _util_Vector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/Vector */ \"./src/util/Vector.ts\");\n\r\n\r\n\r\n\r\n\r\n//SETUP\r\nconst MYCANVAS = document.querySelector('canvas');\r\nconst ctx = MYCANVAS.getContext('2d');\r\nconst CELLSIZE = 5;\r\n//optional\r\n//const WIDTH: number = window.innerWidth - (window.innerWidth % CELLSIZE);\r\n//const HEIGHT: number = window.innerHeight - (window.innerHeight % CELLSIZE);\r\nconst WIDTH = 800;\r\nconst HEIGHT = 600;\r\nctx.canvas.width = WIDTH;\r\nctx.canvas.height = HEIGHT;\r\n//_________________________\r\n//VARIABLES\r\nvar canvas = new _screen_Canvas__WEBPACK_IMPORTED_MODULE_1__.Canvas(HEIGHT / CELLSIZE, WIDTH / CELLSIZE, CELLSIZE, 255);\r\nvar lightSheet = new _screen_LightSheet__WEBPACK_IMPORTED_MODULE_3__.LightSheet(HEIGHT / CELLSIZE, WIDTH / CELLSIZE, CELLSIZE, 10);\r\nvar dither = new _screen_Dither__WEBPACK_IMPORTED_MODULE_2__.Dither();\r\nvar PLAYING = false;\r\n//TESTS ONLY\r\nvar mazeGen = new _mazeGeneration_mazeGenerator__WEBPACK_IMPORTED_MODULE_0__.mazeGenerator(canvas.getCanvasColumns(), canvas.getCanvasRows(), 5);\r\nconsole.log(mazeGen.size);\r\nmazeGen.generateMaze();\r\nmazeGen.generateWalls();\r\nvar lightValue = 8;\r\nvar addState = true;\r\nlightSheet.setLight(new _util_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(20, 20), lightValue);\r\nlightSheet.setLight(new _util_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(60, 20), lightValue);\r\n//lightSheet.setLight(new Vector(40,40),lightValue);\r\n//lightSheet.calculateLightEffects();\r\nPLAYING = true;\r\n//SETTING FRAME-RATE CODE\r\nconst FRAMES_PER_SECOND = 15; // Valid values are 60,30,20,15,10...\r\n// set the mim time to render the next frame\r\nconst FRAME_MIN_TIME = (1000 / 60) * (60 / FRAMES_PER_SECOND) - (1000 / 60) * 0.5;\r\nvar lastFrameTime = 0; // the last frame time\r\nfunction main(time) {\r\n    //FRAME-RATE-CODE\r\n    if (time - lastFrameTime < FRAME_MIN_TIME) { //skip the frame if the call is too early\r\n        requestAnimationFrame(main);\r\n        return; // return as there is nothing to do\r\n    }\r\n    lastFrameTime = time; // remember the time of the rendered frame\r\n    if (PLAYING) {\r\n        //MAIN CODE HERE\r\n        //_______BACKGROUND_________\r\n        //--------------------------//\r\n        ctx.fillStyle = 'rgba(0,0,0,255)';\r\n        ctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n        //--------------------------//\r\n        //canvas.render(ctx);\r\n        //  canvas.lightCalculatedRender(lightSheet.getCanvases(),ctx);\r\n        //  lightSheet.setAllLightLuminanceValues(lightValue);\r\n        //  lightSheet.ditherAll(dither,2);\r\n        mazeGen.completeMazeRender(ctx);\r\n        //mazeGen.render(ctx);\r\n        // FRAME-RATE AND OTHER CALCULATIONS\r\n        if (addState) {\r\n            lightValue -= 0.4;\r\n        }\r\n        else {\r\n            lightValue += 0.4;\r\n        }\r\n        if (lightValue <= 6 || lightValue >= 9) {\r\n            addState = !addState;\r\n        }\r\n        requestAnimationFrame(main);\r\n    }\r\n}\r\nrequestAnimationFrame(main);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8yZC1ibGluZC1tYXplcy8uL3NyYy9pbmRleC50cz9mZmI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUErRDtBQUN0QjtBQUNBO0FBQ1E7QUFDVjtBQUN2QyxPQUFPO0FBQ1AsTUFBTSxRQUFRLEdBQXNCLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDckUsTUFBTSxHQUFHLEdBQTZCLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFaEUsTUFBTSxRQUFRLEdBQVcsQ0FBQyxDQUFDO0FBRTNCLFVBQVU7QUFDViwyRUFBMkU7QUFDM0UsOEVBQThFO0FBQzlFLE1BQU0sS0FBSyxHQUFVLEdBQUcsQ0FBQztBQUN6QixNQUFNLE1BQU0sR0FBVyxHQUFHLENBQUM7QUFFM0IsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ3pCLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztBQUMzQiwyQkFBMkI7QUFFM0IsV0FBVztBQUNYLElBQUksTUFBTSxHQUFXLElBQUksa0RBQU0sQ0FBQyxNQUFNLEdBQUMsUUFBUSxFQUFFLEtBQUssR0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQy9FLElBQUksVUFBVSxHQUFlLElBQUksMERBQVUsQ0FBQyxNQUFNLEdBQUMsUUFBUSxFQUFFLEtBQUssR0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzFGLElBQUksTUFBTSxHQUFXLElBQUksa0RBQU0sRUFBRSxDQUFDO0FBR2xDLElBQUksT0FBTyxHQUFZLEtBQUssQ0FBQztBQUU3QixZQUFZO0FBQ1osSUFBSSxPQUFPLEdBQWtCLElBQUksd0VBQWEsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsRUFBQyxNQUFNLENBQUMsYUFBYSxFQUFFLEVBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDMUIsT0FBTyxDQUFDLFlBQVksRUFBRSxDQUFDO0FBQ3ZCLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUt4QixJQUFJLFVBQVUsR0FBRyxDQUFDLENBQUM7QUFDbkIsSUFBSSxRQUFRLEdBQVcsSUFBSTtBQUUzQixVQUFVLENBQUMsUUFBUSxDQUFDLElBQUksZ0RBQU0sQ0FBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEQsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLGdEQUFNLENBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2xELG9EQUFvRDtBQUdwRCxxQ0FBcUM7QUFDckMsT0FBTyxHQUFHLElBQUksQ0FBQztBQUdmLHlCQUF5QjtBQUN6QixNQUFNLGlCQUFpQixHQUFVLEVBQUUsQ0FBQyxDQUFFLHFDQUFxQztBQUMzRSw0Q0FBNEM7QUFDNUMsTUFBTSxjQUFjLEdBQVcsQ0FBQyxJQUFJLEdBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsaUJBQWlCLENBQUMsR0FBRyxDQUFDLElBQUksR0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUM7QUFDdEYsSUFBSSxhQUFhLEdBQVcsQ0FBQyxDQUFDLENBQUUsc0JBQXNCO0FBQ3RELFNBQVMsSUFBSSxDQUFDLElBQVk7SUFFeEIsaUJBQWlCO0lBQ2pCLElBQUcsSUFBSSxHQUFDLGFBQWEsR0FBRyxjQUFjLEVBQUMsRUFBRSx5Q0FBeUM7UUFDaEYscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsT0FBTyxDQUFDLG1DQUFtQztLQUM1QztJQUNELGFBQWEsR0FBRyxJQUFJLENBQUMsQ0FBQywwQ0FBMEM7SUFHaEUsSUFBRyxPQUFPLEVBQUM7UUFDVCxnQkFBZ0I7UUFFaEIsNEJBQTRCO1FBQzVCLDhCQUE4QjtRQUM5QixHQUFHLENBQUMsU0FBUyxHQUFHLGlCQUFpQixDQUFDO1FBQ2xDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbEMsOEJBQThCO1FBRTlCLHFCQUFxQjtRQUlyQiwrREFBK0Q7UUFFL0Qsc0RBQXNEO1FBQ3RELG1DQUFtQztRQUVuQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEMsc0JBQXNCO1FBSXRCLG9DQUFvQztRQUVwQyxJQUFHLFFBQVEsRUFBQztZQUNWLFVBQVUsSUFBSSxHQUFHLENBQUM7U0FDbkI7YUFBSTtZQUNILFVBQVUsSUFBSSxHQUFHLENBQUM7U0FDbkI7UUFDRCxJQUFHLFVBQVUsSUFBSSxDQUFDLElBQUcsVUFBVSxJQUFJLENBQUMsRUFBQztZQUNuQyxRQUFRLEdBQUcsQ0FBQyxRQUFRLENBQUM7U0FDdEI7UUFFRCxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUU3QjtBQUNILENBQUM7QUFFRCxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyIsImZpbGUiOiIuL3NyYy9pbmRleC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hemVHZW5lcmF0b3IgfSBmcm9tIFwiLi9tYXplR2VuZXJhdGlvbi9tYXplR2VuZXJhdG9yXCI7XG5pbXBvcnQgeyBDYW52YXMgfSBmcm9tIFwiLi9zY3JlZW4vQ2FudmFzXCI7XG5pbXBvcnQgeyBEaXRoZXIgfSBmcm9tIFwiLi9zY3JlZW4vRGl0aGVyXCI7XG5pbXBvcnQgeyBMaWdodFNoZWV0IH0gZnJvbSBcIi4vc2NyZWVuL0xpZ2h0U2hlZXRcIjtcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuL3V0aWwvVmVjdG9yXCI7XG4vL1NFVFVQXG5jb25zdCBNWUNBTlZBUzogSFRNTENhbnZhc0VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdjYW52YXMnKTtcbmNvbnN0IGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEID0gTVlDQU5WQVMuZ2V0Q29udGV4dCgnMmQnKTtcblxuY29uc3QgQ0VMTFNJWkU6IG51bWJlciA9IDU7XG5cbi8vb3B0aW9uYWxcbi8vY29uc3QgV0lEVEg6IG51bWJlciA9IHdpbmRvdy5pbm5lcldpZHRoIC0gKHdpbmRvdy5pbm5lcldpZHRoICUgQ0VMTFNJWkUpO1xuLy9jb25zdCBIRUlHSFQ6IG51bWJlciA9IHdpbmRvdy5pbm5lckhlaWdodCAtICh3aW5kb3cuaW5uZXJIZWlnaHQgJSBDRUxMU0laRSk7XG5jb25zdCBXSURUSDpudW1iZXIgPSA4MDA7XG5jb25zdCBIRUlHSFQ6IG51bWJlciA9IDYwMDtcblxuY3R4LmNhbnZhcy53aWR0aCA9IFdJRFRIO1xuY3R4LmNhbnZhcy5oZWlnaHQgPSBIRUlHSFQ7XG4vL19fX19fX19fX19fX19fX19fX19fX19fX19cblxuLy9WQVJJQUJMRVNcbnZhciBjYW52YXM6IENhbnZhcyA9IG5ldyBDYW52YXMoSEVJR0hUL0NFTExTSVpFLCBXSURUSC9DRUxMU0laRSwgQ0VMTFNJWkUsMjU1KTtcbnZhciBsaWdodFNoZWV0OiBMaWdodFNoZWV0ID0gbmV3IExpZ2h0U2hlZXQoSEVJR0hUL0NFTExTSVpFLCBXSURUSC9DRUxMU0laRSwgQ0VMTFNJWkUsMTApO1xudmFyIGRpdGhlcjogRGl0aGVyID0gbmV3IERpdGhlcigpO1xuXG5cbnZhciBQTEFZSU5HOiBib29sZWFuID0gZmFsc2U7XG5cbi8vVEVTVFMgT05MWVxudmFyIG1hemVHZW46IG1hemVHZW5lcmF0b3IgPSBuZXcgbWF6ZUdlbmVyYXRvcihjYW52YXMuZ2V0Q2FudmFzQ29sdW1ucygpLGNhbnZhcy5nZXRDYW52YXNSb3dzKCksNSk7XG5jb25zb2xlLmxvZyhtYXplR2VuLnNpemUpO1xubWF6ZUdlbi5nZW5lcmF0ZU1hemUoKTtcbm1hemVHZW4uZ2VuZXJhdGVXYWxscygpO1xuXG5cblxuXG52YXIgbGlnaHRWYWx1ZSA9IDg7XG52YXIgYWRkU3RhdGU6Ym9vbGVhbiA9IHRydWVcblxubGlnaHRTaGVldC5zZXRMaWdodChuZXcgVmVjdG9yKDIwLDIwKSxsaWdodFZhbHVlKTtcbmxpZ2h0U2hlZXQuc2V0TGlnaHQobmV3IFZlY3Rvcig2MCwyMCksbGlnaHRWYWx1ZSk7XG4vL2xpZ2h0U2hlZXQuc2V0TGlnaHQobmV3IFZlY3Rvcig0MCw0MCksbGlnaHRWYWx1ZSk7XG5cblxuLy9saWdodFNoZWV0LmNhbGN1bGF0ZUxpZ2h0RWZmZWN0cygpO1xuUExBWUlORyA9IHRydWU7XG5cblxuLy9TRVRUSU5HIEZSQU1FLVJBVEUgQ09ERVxuY29uc3QgRlJBTUVTX1BFUl9TRUNPTkQ6IG51bWJlciA9MTU7ICAvLyBWYWxpZCB2YWx1ZXMgYXJlIDYwLDMwLDIwLDE1LDEwLi4uXG4vLyBzZXQgdGhlIG1pbSB0aW1lIHRvIHJlbmRlciB0aGUgbmV4dCBmcmFtZVxuY29uc3QgRlJBTUVfTUlOX1RJTUU6IG51bWJlciA9ICgxMDAwLzYwKSAqICg2MCAvIEZSQU1FU19QRVJfU0VDT05EKSAtICgxMDAwLzYwKSAqIDAuNTtcbnZhciBsYXN0RnJhbWVUaW1lOiBudW1iZXIgPSAwOyAgLy8gdGhlIGxhc3QgZnJhbWUgdGltZVxuZnVuY3Rpb24gbWFpbih0aW1lOiBudW1iZXIpe1xuXG4gIC8vRlJBTUUtUkFURS1DT0RFXG4gIGlmKHRpbWUtbGFzdEZyYW1lVGltZSA8IEZSQU1FX01JTl9USU1FKXsgLy9za2lwIHRoZSBmcmFtZSBpZiB0aGUgY2FsbCBpcyB0b28gZWFybHlcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobWFpbik7XG4gICAgcmV0dXJuOyAvLyByZXR1cm4gYXMgdGhlcmUgaXMgbm90aGluZyB0byBkb1xuICB9XG4gIGxhc3RGcmFtZVRpbWUgPSB0aW1lOyAvLyByZW1lbWJlciB0aGUgdGltZSBvZiB0aGUgcmVuZGVyZWQgZnJhbWVcblxuXG4gIGlmKFBMQVlJTkcpe1xuICAgIC8vTUFJTiBDT0RFIEhFUkVcblxuICAgIC8vX19fX19fX0JBQ0tHUk9VTkRfX19fX19fX19cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy9cbiAgICBjdHguZmlsbFN0eWxlID0gJ3JnYmEoMCwwLDAsMjU1KSc7XG4gICAgY3R4LmZpbGxSZWN0KDAsIDAsIFdJRFRILCBIRUlHSFQpO1xuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vL1xuXG4gICAgLy9jYW52YXMucmVuZGVyKGN0eCk7XG5cblxuXG4gICAgLy8gIGNhbnZhcy5saWdodENhbGN1bGF0ZWRSZW5kZXIobGlnaHRTaGVldC5nZXRDYW52YXNlcygpLGN0eCk7XG5cbiAgICAvLyAgbGlnaHRTaGVldC5zZXRBbGxMaWdodEx1bWluYW5jZVZhbHVlcyhsaWdodFZhbHVlKTtcbiAgICAvLyAgbGlnaHRTaGVldC5kaXRoZXJBbGwoZGl0aGVyLDIpO1xuICAgIFxuICAgIG1hemVHZW4uY29tcGxldGVNYXplUmVuZGVyKGN0eCk7XG4gICAgLy9tYXplR2VuLnJlbmRlcihjdHgpO1xuXG5cblxuICAgIC8vIEZSQU1FLVJBVEUgQU5EIE9USEVSIENBTENVTEFUSU9OU1xuICAgIFxuICAgIGlmKGFkZFN0YXRlKXtcbiAgICAgIGxpZ2h0VmFsdWUgLT0gMC40O1xuICAgIH1lbHNle1xuICAgICAgbGlnaHRWYWx1ZSArPSAwLjQ7XG4gICAgfVxuICAgIGlmKGxpZ2h0VmFsdWUgPD0gNnx8IGxpZ2h0VmFsdWUgPj0gOSl7XG4gICAgICBhZGRTdGF0ZSA9ICFhZGRTdGF0ZTtcbiAgICB9XG5cbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobWFpbik7XG5cbiAgfVxufVxuXG5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobWFpbik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/mazeGeneration/mazeGenerator.ts":
/*!*********************************************!*\
  !*** ./src/mazeGeneration/mazeGenerator.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mazeGenerator\": () => (/* binding */ mazeGenerator)\n/* harmony export */ });\n/* harmony import */ var _util_Cell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Cell */ \"./src/util/Cell.ts\");\n/* harmony import */ var _util_Color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Color */ \"./src/util/Color.ts\");\n/* harmony import */ var _util_Vector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Vector */ \"./src/util/Vector.ts\");\n\r\n\r\n\r\nclass mazeGenerator {\r\n    constructor(screenWidth, screenHeight, cellSize) {\r\n        this.generateMazeStep1 = false;\r\n        //init\r\n        this.size = new _util_Vector__WEBPACK_IMPORTED_MODULE_2__.Vector(0, 0);\r\n        this.cellSize = cellSize;\r\n        this.determineMazeResolution(screenWidth, screenHeight, cellSize);\r\n        this.maze = new Array(this.size.getX() * this.size.getY());\r\n        this.mazeSize = new _util_Vector__WEBPACK_IMPORTED_MODULE_2__.Vector((this.size.getX() / 2) - 1, (this.size.getY() / 2) - 1);\r\n        //init generated maze\r\n        this.generatedMaze = new Array(((this.size.getX() / 2) - 1) *\r\n            ((this.size.getY() / 2) - 1));\r\n        for (var y = 0; y < this.mazeSize.getY(); y++) {\r\n            for (var x = 0; x < this.mazeSize.getX(); x++) {\r\n                this.generatedMaze[y * this.mazeSize.getX() + x] = new _util_Cell__WEBPACK_IMPORTED_MODULE_0__.Cell(new _util_Vector__WEBPACK_IMPORTED_MODULE_2__.Vector(x, y), this.cellSize, this.cellSize, true);\r\n            }\r\n        }\r\n        for (var y = 0; y < this.size.getY(); y++) {\r\n            for (var x = 0; x < this.size.getX(); x++) {\r\n                this.maze[y * this.size.getX() + x] = new _util_Cell__WEBPACK_IMPORTED_MODULE_0__.Cell(new _util_Vector__WEBPACK_IMPORTED_MODULE_2__.Vector(x, y), this.cellSize, this.cellSize, false, new _util_Color__WEBPACK_IMPORTED_MODULE_1__.Color(255));\r\n            }\r\n        }\r\n    }\r\n    //GENERATE MAZE STEP 1\r\n    generateMaze() {\r\n        /*\r\n        Choose the initial cell, mark it as visited and push it to the stack\r\n            While the stack is not empty\r\n                Pop a cell from the stack and make it a current cell\r\n                If the current cell has any neighbours which have not been visited\r\n                    Push the current cell to the stack\r\n                    Choose one of the unvisited neighbours\r\n                    Remove the wall between the current cell and the chosen cell\r\n                    Mark the chosen cell as visited and push it to the stack\r\n         */\r\n        //console.log('reaching 1');\r\n        var stack = new Array();\r\n        //Choose the initial cell, mark it as visited and push it to the stack\r\n        var currentCell = 0;\r\n        this.generatedMaze[currentCell].visited = true;\r\n        stack.push(0);\r\n        //While the stack is not empty\r\n        while (stack.length != 0) {\r\n            //console.log('reaching 2');\r\n            //Pop a cell from the stack and mark it as current cell\r\n            currentCell = stack.pop();\r\n            var currentCellNeighbours = this.checkNeighbours(this.generatedMaze[currentCell].posX, this.generatedMaze[currentCell].posY);\r\n            //console.log(currentCellNeighbours);\r\n            //If the current cell has any neighbours which have not been visited\r\n            if (currentCellNeighbours.length != 0) {\r\n                stack.push(currentCell);\r\n                //choose a random one\r\n                var chosenOneIndex = Math.floor(Math.random() * currentCellNeighbours.length);\r\n                var chosenOne = currentCellNeighbours[chosenOneIndex];\r\n                //console.log(currentCellNeighbours.length , chosenOneIndex)\r\n                //REMOVING WALLS\r\n                //right\r\n                if (this.generatedMaze[chosenOne].posX > this.generatedMaze[currentCell].posX) {\r\n                    this.generatedMaze[chosenOne].updateBound(-1, 0, false);\r\n                    this.generatedMaze[currentCell].updateBound(1, 0, false);\r\n                }\r\n                //left\r\n                if (this.generatedMaze[chosenOne].posX < this.generatedMaze[currentCell].posX) {\r\n                    this.generatedMaze[chosenOne].updateBound(1, 0, false);\r\n                    this.generatedMaze[currentCell].updateBound(-1, 0, false);\r\n                }\r\n                //up\r\n                if (this.generatedMaze[chosenOne].posY < this.generatedMaze[currentCell].posY) {\r\n                    this.generatedMaze[chosenOne].updateBound(0, 1, false);\r\n                    this.generatedMaze[currentCell].updateBound(0, -1, false);\r\n                }\r\n                //down\r\n                if (this.generatedMaze[chosenOne].posY > this.generatedMaze[currentCell].posY) {\r\n                    this.generatedMaze[chosenOne].updateBound(0, -1);\r\n                    this.generatedMaze[currentCell].updateBound(0, 1);\r\n                }\r\n                this.generatedMaze[chosenOne].visited = true;\r\n                stack.push(chosenOne);\r\n            }\r\n        }\r\n        this.generateMazeStep1 = true;\r\n        //console.log(this.generatedMaze)\r\n    }\r\n    generateWalls() {\r\n        if (this.generateMazeStep1) {\r\n            var i = 0;\r\n            for (var y = 1; y < this.size.getY() - 1; y += 2) {\r\n                for (var x = 1; x < this.size.getX() - 1; x += 2) {\r\n                    if (this.generatedMaze[i].top) {\r\n                        this.maze[this.getIndex(x - 1, y - 1, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x, y - 1, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x + 1, y - 1, this.size.getX())].visited = true;\r\n                    }\r\n                    if (this.generatedMaze[i].right) {\r\n                        this.maze[this.getIndex(x + 1, y - 1, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x + 1, y, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x + 1, y + 1, this.size.getX())].visited = true;\r\n                    }\r\n                    if (this.generatedMaze[i].left) {\r\n                        this.maze[this.getIndex(x - 1, y - 1, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x - 1, y, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x - 1, y + 1, this.size.getX())].visited = true;\r\n                    }\r\n                    if (this.generatedMaze[i].bottom) {\r\n                        this.maze[this.getIndex(x - 1, y + 1, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x, y + 1, this.size.getX())].visited = true;\r\n                        this.maze[this.getIndex(x + 1, y + 1, this.size.getX())].visited = true;\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('maze not generated');\r\n        }\r\n    }\r\n    checkNeighbours(x, y) {\r\n        var neighbourIndeces = new Array();\r\n        var counter = 0;\r\n        var top = this.getIndex(x, y - 1) >= 0 ? this.generatedMaze[this.getIndex(x, y - 1)] : undefined;\r\n        var bottom = this.getIndex(x, y + 1) >= 0 ? this.generatedMaze[this.getIndex(x, y + 1)] : undefined;\r\n        var right = this.getIndex(x + 1, y) >= 0 ? this.generatedMaze[this.getIndex(x + 1, y)] : undefined;\r\n        var left = this.getIndex(x - 1, y) >= 0 ? this.generatedMaze[this.getIndex(x - 1, y)] : undefined;\r\n        //console.log(this.getIndex(x, y + 1));\r\n        if (typeof top != 'undefined' && !top.visited) {\r\n            neighbourIndeces[counter] = this.getIndex(top.posX, top.posY);\r\n            counter++;\r\n        }\r\n        if (typeof bottom != 'undefined' && !bottom.visited) {\r\n            neighbourIndeces[counter] = this.getIndex(bottom.posX, bottom.posY);\r\n            counter++;\r\n        }\r\n        if (typeof left != 'undefined' && !left.visited) {\r\n            neighbourIndeces[counter] = this.getIndex(left.posX, left.posY);\r\n            counter++;\r\n        }\r\n        if (typeof right != 'undefined' && !right.visited) {\r\n            neighbourIndeces[counter] = this.getIndex(right.posX, right.posY);\r\n            counter++;\r\n        }\r\n        //console.log(neighbourIndeces)\r\n        return neighbourIndeces;\r\n    }\r\n    getIndex(x, y, width) {\r\n        var returnVal = -2;\r\n        if (x < 0 || y < 0 || x > this.mazeSize.getX() - 1 || y > this.mazeSize.getY() - 1) {\r\n            returnVal = -1;\r\n        }\r\n        if (width == undefined) {\r\n            returnVal = y * this.mazeSize.getX() + x;\r\n            if (x < 0 || y < 0 || x > this.mazeSize.getX() - 1 || y > this.mazeSize.getY() - 1) {\r\n                returnVal = -1;\r\n            }\r\n        }\r\n        else {\r\n            returnVal = y * width + x;\r\n        }\r\n        return returnVal;\r\n    }\r\n    /**\r\n     * Determines the total resolution of the maze excluding the tile width and height\r\n     */\r\n    //function to determine the resolution of the maze\r\n    determineMazeResolution(screenWidth, screenHeight, cellSize) {\r\n        //WIDTH CALCULATIONS\r\n        if (screenWidth % cellSize != 0) {\r\n            screenWidth = screenWidth - screenWidth % cellSize;\r\n        }\r\n        //innerMaze calculations\r\n        if (((screenWidth / cellSize) / 2) - 1 - Math.floor(((screenWidth / cellSize) / 2) - 1) != 0) {\r\n            screenWidth -= cellSize;\r\n        }\r\n        //HEIGHT CALCULATIONS\r\n        if (screenHeight % cellSize != 0) {\r\n            screenHeight = screenHeight - screenHeight % cellSize;\r\n        }\r\n        //innerMaze calculations\r\n        if (((screenHeight / cellSize) / 2) - 1 - Math.floor(((screenHeight / cellSize) / 2) - 1) != 0) {\r\n            screenHeight -= cellSize;\r\n        }\r\n        //FINAL ASSIGNING\r\n        this.size.setX(screenWidth / cellSize);\r\n        this.size.setY(screenHeight / cellSize);\r\n    }\r\n    render(ctx) {\r\n        for (var i = 0; i < this.generatedMaze.length; i++) {\r\n            this.generatedMaze[i].debugRender(ctx, true);\r\n        }\r\n    }\r\n    completeMazeRender(ctx) {\r\n        for (var i = 0; i < this.maze.length; i++) {\r\n            this.maze[i].noBoundRender(ctx);\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/mazeGeneration/mazeGenerator.ts\n");

/***/ }),

/***/ "./src/screen/Canvas.ts":
/*!******************************!*\
  !*** ./src/screen/Canvas.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Canvas\": () => (/* binding */ Canvas)\n/* harmony export */ });\n/* harmony import */ var _util_Color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Color */ \"./src/util/Color.ts\");\n\r\nclass Canvas {\r\n    constructor(rows, columns, cellSize, specificColor) {\r\n        //setting vars\r\n        this.cellSize = cellSize;\r\n        this.rows = rows;\r\n        this.columns = columns;\r\n        //setting default value of canvas as black (0)\r\n        this.canvas = new Array(rows * columns);\r\n        //test\r\n        var counter = 0;\r\n        for (let y = 0; y < this.rows; y++) {\r\n            for (let x = 0; x < this.columns; x++) {\r\n                if (typeof (specificColor) != 'undefined') {\r\n                    this.canvas[this.getIndex(x, y)] = new _util_Color__WEBPACK_IMPORTED_MODULE_0__.Color(specificColor);\r\n                }\r\n                else {\r\n                    this.canvas[this.getIndex(x, y)] = new _util_Color__WEBPACK_IMPORTED_MODULE_0__.Color(counter);\r\n                }\r\n                //test\r\n                counter = (x + y) % 2 * 255;\r\n            }\r\n        }\r\n    }\r\n    //setColorVALS is to set the color value of the canvas pixels without replacing them\r\n    setColorVals(arg) {\r\n        for (var y = 0; y < this.rows; y++) {\r\n            for (var x = 0; x < this.columns; x++) {\r\n                this.canvas[this.getIndex(x, y)].setColorVal(arg[this.getIndex(x, y)]);\r\n            }\r\n        }\r\n    }\r\n    //sets individual color VALUES\r\n    setColorVal(x, y, val) {\r\n        if (x >= 0 && x <= this.columns) {\r\n            if (y >= 0 && y <= this.rows) {\r\n                this.canvas[this.getIndex(x, y)].setColorVal(val);\r\n            }\r\n        }\r\n    }\r\n    //sets individual colors\r\n    setColor(x, y, color) {\r\n        if (x >= 0 && x <= this.columns) {\r\n            if (y >= 0 && y <= this.rows) {\r\n                this.canvas[this.getIndex(x, y)] = color;\r\n            }\r\n        }\r\n    }\r\n    //setCOLOR on the other hand replaces the canvas with the specified array of colors\r\n    setColors(arg) {\r\n        for (var y = 0; y < this.rows; y++) {\r\n            for (var x = 0; x < this.columns; x++) {\r\n                this.setColor(x, y, arg[this.getIndex(x, y)]);\r\n            }\r\n        }\r\n    }\r\n    //method for renderring the pixels/colors to the screen\r\n    render(ctx) {\r\n        for (var y = 0; y < this.rows; y++) {\r\n            for (var x = 0; x < this.columns; x++) {\r\n                var val = this.canvas[this.getIndex(x, y)].getColorVal();\r\n                if (val == 0) {\r\n                    ctx.fillStyle = 'black';\r\n                }\r\n                else {\r\n                    ctx.fillStyle = `rgba(${val},${val},${val},255)`;\r\n                }\r\n                ctx.fillRect(x * this.cellSize, y * this.cellSize, this.cellSize, this.cellSize);\r\n            }\r\n        }\r\n    }\r\n    lightCalculatedRender(canvases, ctx) {\r\n        //looping through all light canvases\r\n        for (var i = 0; i < canvases.length; i++) {\r\n            //setting current canvas\r\n            var currentCanvas = canvases[i];\r\n            //looping through this canvas\r\n            for (var y = 0; y < this.rows; y++) {\r\n                for (var x = 0; x < this.columns; x++) {\r\n                    var colorVal = this.canvas[this.getIndex(x, y)].getColorVal();\r\n                    var alphaVal = currentCanvas.getColorVal(x, y);\r\n                    ctx.fillStyle = `rgba(${colorVal},${colorVal},${colorVal},${alphaVal / 255})`;\r\n                    ctx.fillRect(x * this.cellSize, y * this.cellSize, this.cellSize, this.cellSize);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //GETTERS\r\n    getCanvasRows() {\r\n        return this.rows;\r\n    }\r\n    getCanvasColumns() {\r\n        return this.columns;\r\n    }\r\n    getCanvasCellSize() {\r\n        return this.cellSize;\r\n    }\r\n    getIndex(x, y) {\r\n        let index = y * this.columns + x;\r\n        return index;\r\n    }\r\n    getColors() {\r\n        return this.canvas;\r\n    }\r\n    getColorVal(x, y) {\r\n        if (x >= 0 && x < this.columns && y >= 0 && y < this.rows) {\r\n            return this.canvas[this.getIndex(x, y)].getColorVal();\r\n        }\r\n    }\r\n    //-------------------------------------\r\n    //----------------RESET----------------\r\n    //-------------------------------------\r\n    resetColors() {\r\n        for (var y = 0; y < this.rows; y++) {\r\n            for (var x = 0; x < this.columns; x++) {\r\n                this.setColorVal(x, y, 0);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/screen/Canvas.ts\n");

/***/ }),

/***/ "./src/screen/Dither.ts":
/*!******************************!*\
  !*** ./src/screen/Dither.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dither\": () => (/* binding */ Dither)\n/* harmony export */ });\nclass Dither {\r\n    constructor() {\r\n    }\r\n    ditherSingle(canvas, ditherLevel) {\r\n        var rows = canvas.getCanvasRows();\r\n        var columns = canvas.getCanvasColumns();\r\n        var ditherLevel = ditherLevel;\r\n        //DITHER\r\n        // for each y from top to bottom do\r\n        //     for each x from left to right do\r\n        //         oldpixel := pixel[x][y]\r\n        //         newpixel := find_closest_palette_color(oldpixel)\r\n        //         pixel[x][y] := newpixel\r\n        //         quant_error := oldpixel - newpixel\r\n        //         pixel[x + 1][y    ] := pixel[x + 1][y    ] + quant_error × 7 / 16\r\n        //         pixel[x - 1][y + 1] := pixel[x - 1][y + 1] + quant_error × 3 / 16\r\n        //         pixel[x    ][y + 1] := pixel[x    ][y + 1] + quant_error × 5 / 16\r\n        //         pixel[x + 1][y + 1] := pixel[x + 1][y + 1] + quant_error × 1 / 16\r\n        //find_closest_palette_color(oldpixel) = round(oldpixel / 256)\r\n        for (let y = 0; y < rows - 1; y++) {\r\n            for (let x = 1; x < columns - 1; x++) {\r\n                var pixelColor = canvas.getColorVal(x, y);\r\n                if (pixelColor != 0) {\r\n                    var newPixelColor = (Math.round(pixelColor / (255 * (ditherLevel - 1))) * (255 / (ditherLevel - 1)));\r\n                    canvas.setColorVal(x, y, newPixelColor);\r\n                    var quant_error = pixelColor - newPixelColor;\r\n                    canvas.setColorVal(x + 1, y, canvas.getColorVal(x + 1, y) + (quant_error * 7) / 16);\r\n                    canvas.setColorVal(x - 1, y + 1, canvas.getColorVal(x - 1, y + 1) + (quant_error * 3) / 16);\r\n                    canvas.setColorVal(x, y + 1, canvas.getColorVal(x, y + 1) + (quant_error * 5) / 16);\r\n                    canvas.setColorVal(x + 1, y + 1, canvas.getColorVal(x + 1, y + 1) + (quant_error * 1) / 16);\r\n                }\r\n            }\r\n        }\r\n        return canvas.getColors();\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8yZC1ibGluZC1tYXplcy8uL3NyYy9zY3JlZW4vRGl0aGVyLnRzP2U3MGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdPLE1BQU0sTUFBTTtJQUNmO0lBRUEsQ0FBQztJQUVNLFlBQVksQ0FBQyxNQUFjLEVBQUUsV0FBbUI7UUFDbkQsSUFBSSxJQUFJLEdBQVcsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzFDLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQ3hDLElBQUksV0FBVyxHQUFXLFdBQVcsQ0FBQztRQUV0QyxRQUFRO1FBRVIsbUNBQW1DO1FBQ25DLHVDQUF1QztRQUN2QyxrQ0FBa0M7UUFDbEMsMkRBQTJEO1FBQzNELGtDQUFrQztRQUNsQyw2Q0FBNkM7UUFDN0MsNEVBQTRFO1FBQzVFLDRFQUE0RTtRQUM1RSw0RUFBNEU7UUFDNUUsNEVBQTRFO1FBRTVFLDhEQUE4RDtRQUU5RCxLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxHQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBQztZQUMxQixLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxHQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBQztnQkFDN0IsSUFBSSxVQUFVLEdBQVcsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pELElBQUcsVUFBVSxJQUFJLENBQUMsRUFBQztvQkFFbkIsSUFBSSxhQUFhLEdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFHLFVBQVUsR0FBRyxDQUFDLEdBQUcsR0FBQyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUMsQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUN6RyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsYUFBYSxDQUFDLENBQUM7b0JBQ3RDLElBQUksV0FBVyxHQUFXLFVBQVUsR0FBQyxhQUFhLENBQUM7b0JBRW5ELE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBSyxHQUFHLENBQUMsV0FBVyxHQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO29CQUMzRixNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO29CQUMzRixNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsR0FBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztvQkFDM0YsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsR0FBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztpQkFHMUY7YUFDSjtTQUNKO1FBRUQsT0FBTyxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUM7SUFHOUIsQ0FBQztDQUNKIiwiZmlsZSI6Ii4vc3JjL3NjcmVlbi9EaXRoZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2xvciB9IGZyb20gXCIuLi91dGlsL0NvbG9yXCI7XHJcbmltcG9ydCB7IENhbnZhcyB9IGZyb20gXCIuL0NhbnZhc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIERpdGhlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBkaXRoZXJTaW5nbGUoY2FudmFzOiBDYW52YXMsIGRpdGhlckxldmVsOiBudW1iZXIpOiBDb2xvcltde1xyXG4gICAgICAgIHZhciByb3dzOiBudW1iZXIgPSBjYW52YXMuZ2V0Q2FudmFzUm93cygpO1xyXG4gICAgICAgIHZhciBjb2x1bW5zID0gY2FudmFzLmdldENhbnZhc0NvbHVtbnMoKTtcclxuICAgICAgICB2YXIgZGl0aGVyTGV2ZWw6IG51bWJlciA9IGRpdGhlckxldmVsO1xyXG4gICAgICAgICAgICAgICBcclxuICAgICAgICAvL0RJVEhFUlxyXG5cclxuICAgICAgICAvLyBmb3IgZWFjaCB5IGZyb20gdG9wIHRvIGJvdHRvbSBkb1xyXG4gICAgICAgIC8vICAgICBmb3IgZWFjaCB4IGZyb20gbGVmdCB0byByaWdodCBkb1xyXG4gICAgICAgIC8vICAgICAgICAgb2xkcGl4ZWwgOj0gcGl4ZWxbeF1beV1cclxuICAgICAgICAvLyAgICAgICAgIG5ld3BpeGVsIDo9IGZpbmRfY2xvc2VzdF9wYWxldHRlX2NvbG9yKG9sZHBpeGVsKVxyXG4gICAgICAgIC8vICAgICAgICAgcGl4ZWxbeF1beV0gOj0gbmV3cGl4ZWxcclxuICAgICAgICAvLyAgICAgICAgIHF1YW50X2Vycm9yIDo9IG9sZHBpeGVsIC0gbmV3cGl4ZWxcclxuICAgICAgICAvLyAgICAgICAgIHBpeGVsW3ggKyAxXVt5ICAgIF0gOj0gcGl4ZWxbeCArIDFdW3kgICAgXSArIHF1YW50X2Vycm9yIMOXIDcgLyAxNlxyXG4gICAgICAgIC8vICAgICAgICAgcGl4ZWxbeCAtIDFdW3kgKyAxXSA6PSBwaXhlbFt4IC0gMV1beSArIDFdICsgcXVhbnRfZXJyb3Igw5cgMyAvIDE2XHJcbiAgICAgICAgLy8gICAgICAgICBwaXhlbFt4ICAgIF1beSArIDFdIDo9IHBpeGVsW3ggICAgXVt5ICsgMV0gKyBxdWFudF9lcnJvciDDlyA1IC8gMTZcclxuICAgICAgICAvLyAgICAgICAgIHBpeGVsW3ggKyAxXVt5ICsgMV0gOj0gcGl4ZWxbeCArIDFdW3kgKyAxXSArIHF1YW50X2Vycm9yIMOXIDEgLyAxNlxyXG5cclxuICAgICAgICAvL2ZpbmRfY2xvc2VzdF9wYWxldHRlX2NvbG9yKG9sZHBpeGVsKSA9IHJvdW5kKG9sZHBpeGVsIC8gMjU2KVxyXG5cclxuICAgICAgICBmb3IobGV0IHkgPSAwOyB5IDwgcm93cy0xO3krKyl7XHJcbiAgICAgICAgICAgIGZvcihsZXQgeCA9IDE7IHggPCBjb2x1bW5zLTE7eCsrKXtcclxuICAgICAgICAgICAgICAgIHZhciBwaXhlbENvbG9yOiBudW1iZXIgPSBjYW52YXMuZ2V0Q29sb3JWYWwoeCx5KTtcclxuICAgICAgICAgICAgICAgIGlmKHBpeGVsQ29sb3IgIT0gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB2YXIgbmV3UGl4ZWxDb2xvcjogbnVtYmVyID0gKE1hdGgucm91bmQoICBwaXhlbENvbG9yIC8gKDI1NSooZGl0aGVyTGV2ZWwtMSkpICApICogKDI1NS8oZGl0aGVyTGV2ZWwtMSkpKTtcclxuICAgICAgICAgICAgICAgIGNhbnZhcy5zZXRDb2xvclZhbCh4LHksbmV3UGl4ZWxDb2xvcik7XHJcbiAgICAgICAgICAgICAgICB2YXIgcXVhbnRfZXJyb3I6IG51bWJlciA9IHBpeGVsQ29sb3ItbmV3UGl4ZWxDb2xvcjtcclxuXHJcbiAgICAgICAgICAgICAgICBjYW52YXMuc2V0Q29sb3JWYWwoeCArIDEsIHkgICAgLCBjYW52YXMuZ2V0Q29sb3JWYWwoeCArIDEsIHkgICAgKSArIChxdWFudF9lcnJvciogNykgLyAxNik7XHJcbiAgICAgICAgICAgICAgICBjYW52YXMuc2V0Q29sb3JWYWwoeCAtIDEsIHkgKyAxLCBjYW52YXMuZ2V0Q29sb3JWYWwoeCAtIDEsIHkgKyAxKSArIChxdWFudF9lcnJvciogMykgLyAxNik7XHJcbiAgICAgICAgICAgICAgICBjYW52YXMuc2V0Q29sb3JWYWwoeCAgICAsIHkgKyAxLCBjYW52YXMuZ2V0Q29sb3JWYWwoeCAgICAsIHkgKyAxKSArIChxdWFudF9lcnJvciogNSkgLyAxNik7XHJcbiAgICAgICAgICAgICAgICBjYW52YXMuc2V0Q29sb3JWYWwoeCArIDEsIHkgKyAxLCBjYW52YXMuZ2V0Q29sb3JWYWwoeCArIDEsIHkgKyAxKSArIChxdWFudF9lcnJvciogMSkgLyAxNik7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gY2FudmFzLmdldENvbG9ycygpO1xyXG5cclxuXHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/screen/Dither.ts\n");

/***/ }),

/***/ "./src/screen/LightSheet.ts":
/*!**********************************!*\
  !*** ./src/screen/LightSheet.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LightSheet\": () => (/* binding */ LightSheet)\n/* harmony export */ });\n/* harmony import */ var _util_Light__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Light */ \"./src/util/Light.ts\");\n/* harmony import */ var _Canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Canvas */ \"./src/screen/Canvas.ts\");\n\r\n\r\nclass LightSheet {\r\n    constructor(rows, columns, cellSize, lightIntensity) {\r\n        this.lightCanvases = Array();\r\n        this.rows = rows;\r\n        this.columns = columns;\r\n        this.cellSize = cellSize;\r\n        this.lightIntensity = lightIntensity;\r\n        this.maxDistanceFromLight = Math.sqrt(this.columns * this.columns + this.rows * this.rows);\r\n        this.lights = new Array();\r\n    }\r\n    //NOT GETTERS OR SETTERS 🤣\r\n    setLight(vec, luminanceValue) {\r\n        this.lights.push(new _util_Light__WEBPACK_IMPORTED_MODULE_0__.Light(vec, luminanceValue));\r\n        this.lightCanvases.push(new _Canvas__WEBPACK_IMPORTED_MODULE_1__.Canvas(this.rows, this.columns, this.cellSize, 0));\r\n        this.calculateLightEffects();\r\n        //console.log(this.lightCanvases);\r\n    }\r\n    //----------------------------------------------------------------\r\n    //----------------------------------------------------------------\r\n    //-------------------------Very Important-------------------------\r\n    calculateLightEffects() {\r\n        //loop through lights\r\n        //get luminance value\r\n        //loop through all canvas pixels...\r\n        // add distance .... stuff:\r\n        //  (lightVal-minLightVal/maxLightVal-minLightVal * (dist / (maxDistVal* lightSize)) * 255\r\n        for (var i = 0; i < this.lights.length; i++) {\r\n            var lightLuminanceValue = this.lights[i].getLuminanceValue();\r\n            var minLuminanceValue = this.lights[i].getMinLuminanceValue();\r\n            var maxLuminanceValue = this.lights[i].getMaxLuminanceValue();\r\n            var lightPercentage = ((lightLuminanceValue) - minLuminanceValue) / (maxLuminanceValue - minLuminanceValue);\r\n            var lightX = this.lights[i].getPositionX();\r\n            var lightY = this.lights[i].getPositionY();\r\n            this.lightCanvases[i].resetColors();\r\n            for (var y = 0; y < this.rows; y++) {\r\n                for (var x = 0; x < this.columns; x++) {\r\n                    // the stuff...\r\n                    var distanceFromLight = Math.sqrt((lightX - x) * (lightX - x) +\r\n                        (lightY - y) * (lightY - y));\r\n                    var distanceOverMaxDistanceFactor = distanceFromLight / (this.maxDistanceFromLight * (this.lightIntensity / 50));\r\n                    var finalValue = distanceOverMaxDistanceFactor * lightPercentage * 255 * 4;\r\n                    //formula 1: a+b\r\n                    //formula 2: (a * (a/(a+b)))+(b*(b/(a+b)))\r\n                    if (finalValue < 0) {\r\n                        finalValue = 0;\r\n                    }\r\n                    else if (finalValue > 255) {\r\n                        finalValue = 255;\r\n                    }\r\n                    this.lightCanvases[i].setColorVal(x, y, 255 - finalValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //----------------------------------------------------------------\r\n    //----------------------------------------------------------------\r\n    ditherAll(ditherer, ditherLevel) {\r\n        for (let i = 0; i < this.lightCanvases.length; i++) {\r\n            this.lightCanvases[i].setColors(ditherer.ditherSingle(this.lightCanvases[i], ditherLevel));\r\n        }\r\n    }\r\n    render(ctx) {\r\n        for (var i = 0; i < this.lightCanvases.length; i++) {\r\n            this.lightCanvases[i].render(ctx);\r\n        }\r\n        this.calculateLightEffects();\r\n    }\r\n    //GETTERS\r\n    getRows() {\r\n        return this.rows;\r\n    }\r\n    getColumns() {\r\n        return this.columns;\r\n    }\r\n    getCellSize() {\r\n        return this.cellSize;\r\n    }\r\n    getCanvases() {\r\n        return this.lightCanvases;\r\n    }\r\n    //SETTERS\r\n    setAllLightLuminanceValues(luminance) {\r\n        for (var i = 0; i < this.lights.length; i++) {\r\n            this.lights[i].setLuminanceValue(luminance);\r\n        }\r\n        this.calculateLightEffects();\r\n        //console.log(this.lights.length);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/screen/LightSheet.ts\n");

/***/ }),

/***/ "./src/util/Cell.ts":
/*!**************************!*\
  !*** ./src/util/Cell.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Cell\": () => (/* binding */ Cell)\n/* harmony export */ });\n/* harmony import */ var _Color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Color */ \"./src/util/Color.ts\");\n\r\nclass Cell {\r\n    constructor(position, width, height, hasBounds, color, renderArray) {\r\n        //sset required params\r\n        this.position = position;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.visited = false;\r\n        //set optional params\r\n        if (typeof hasBounds != 'undefined' && hasBounds) {\r\n            //setting bounds\r\n            this.hasBounds = hasBounds;\r\n            this.topBound = true;\r\n            this.leftBound = true;\r\n            this.rightBound = true;\r\n            this.bottomBound = true;\r\n        }\r\n        if (typeof hasBounds == 'undefined' || (hasBounds != undefined && !hasBounds)) {\r\n            this.color = new _Color__WEBPACK_IMPORTED_MODULE_0__.Color(color.getColorVal());\r\n        }\r\n        if (typeof renderArray != 'undefined') {\r\n            this.renderArray = renderArray;\r\n        }\r\n    }\r\n    updateBound(x, y, state) {\r\n        if (typeof state != 'undefined') {\r\n            //STATE SPECIFIED\r\n            if (x == 1 && y == 0) {\r\n                //RIGHT\r\n                this.rightBound = state;\r\n            }\r\n            else if (x == -1 && y == 0) {\r\n                //LEFT\r\n                this.leftBound = state;\r\n            }\r\n            else if (x == 0 && y == -1) {\r\n                //UP\r\n                this.topBound = state;\r\n            }\r\n            else if (x == 0 && y == 1) {\r\n                //DOWN\r\n                this.bottomBound = state;\r\n            }\r\n            else {\r\n                console.log('Error: Invalid bound vector specified.');\r\n            }\r\n        }\r\n        else {\r\n            //STATE UNSPECIFIED\r\n            if (x == 1 && y == 0) {\r\n                //RIGHT\r\n                this.rightBound = !this.rightBound;\r\n            }\r\n            else if (x == -1 && y == 0) {\r\n                //LEFT\r\n                this.leftBound = !this.leftBound;\r\n            }\r\n            else if (x == 0 && y == -1) {\r\n                //UP\r\n                this.topBound = !this.topBound;\r\n            }\r\n            else if (x == 0 && y == 1) {\r\n                //DOWN\r\n                this.bottomBound = !this.bottomBound;\r\n            }\r\n            else {\r\n                console.log('Error: Invalid bound vector specified.');\r\n            }\r\n        }\r\n    }\r\n    render(canvas) {\r\n        //checking if the renderArray was specified\r\n        if (typeof this.renderArray != 'undefined') {\r\n            for (var y = 0; y < this.height; y++) {\r\n                for (var x = 0; x < this.width; x++) {\r\n                    //calling the method ....this part is a bit tricky\r\n                    canvas.setColor(this.position.getX(), this.position.getX(), this.renderArray[y * this.width + x]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var y = 0; y < this.height; y++) {\r\n                for (var x = 0; x < this.width; x++) {\r\n                    //just setting the value\r\n                    canvas.setColorVal(this.position.getX(), this.position.getX(), 127);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    debugRender(ctx, wire) {\r\n        if (wire) {\r\n            //WIREFRAME\r\n            //ctx.fillStyle = 'rgba(255,0,0,255)';\r\n            //ctx.fillRect(this.position.getX()*this.width, this.position.getY()*this.height, this.width, this.height);\r\n            ctx.fillStyle = 'rgba(255,255,255,255)';\r\n            var localWidth = 10;\r\n            if (this.leftBound) {\r\n                ctx.fillRect(this.position.getX() * localWidth * this.width, this.position.getY() * localWidth * this.height, 3, this.height * localWidth);\r\n            }\r\n            if (this.rightBound) {\r\n                ctx.fillRect(this.position.getX() * localWidth * this.width + this.width * localWidth, this.position.getY() * localWidth * this.height, 3, this.height * localWidth);\r\n            }\r\n            if (this.bottomBound) {\r\n                ctx.fillRect(this.position.getX() * localWidth * this.width, this.position.getY() * localWidth * this.height + this.height * localWidth, this.width * localWidth, 3);\r\n            }\r\n            if (this.topBound) {\r\n                ctx.fillRect(this.position.getX() * localWidth * this.width, this.position.getY() * localWidth * this.height, this.width * localWidth, 3);\r\n            }\r\n        }\r\n        else {\r\n            console.log('No non-wire debug render implemented');\r\n        }\r\n    }\r\n    noBoundRender(ctx) {\r\n        //console.log('a');\r\n        if (this.color != null) {\r\n            //console.log('b');\r\n            ctx.fillStyle = `rgba(${this.color.getColorVal()},${this.color.getColorVal()},${this.color.getColorVal()},${this.color.getColorVal()})`;\r\n            if (this.visited) {\r\n                ctx.fillRect(this.position.getX() * this.width * 5, this.position.getY() * this.height * 5, this.width * 5, this.height * 5);\r\n            }\r\n            else {\r\n                //console.log('not visited');\r\n            }\r\n        }\r\n    }\r\n    //GETTERS\r\n    get pos() {\r\n        return this.position;\r\n    }\r\n    get posX() {\r\n        return this.position.getX();\r\n    }\r\n    get posY() {\r\n        return this.position.getY();\r\n    }\r\n    get left() {\r\n        return this.leftBound;\r\n    }\r\n    get right() {\r\n        return this.rightBound;\r\n    }\r\n    get top() {\r\n        return this.topBound;\r\n    }\r\n    get bottom() {\r\n        return this.bottomBound;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/util/Cell.ts\n");

/***/ }),

/***/ "./src/util/Color.ts":
/*!***************************!*\
  !*** ./src/util/Color.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Color\": () => (/* binding */ Color)\n/* harmony export */ });\n//the color class\r\nclass Color {\r\n    constructor(color) {\r\n        //chacking if the value specified is within the color range\r\n        if (color >= 0 && color <= 255) {\r\n            this.color = color;\r\n        }\r\n        else {\r\n            console.log(\"Color value specified exceeds bounds.\");\r\n        }\r\n    }\r\n    //get the VALUE of the color\r\n    getColorVal() {\r\n        return this.color;\r\n    }\r\n    //get the color OBJECT\r\n    getColor() {\r\n        return this;\r\n    }\r\n    //there is only a color VALUE setter method as I dont think u can change the object itself.. -\\_(^v^)_/-\r\n    setColorVal(val) {\r\n        this.color = val;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8yZC1ibGluZC1tYXplcy8uL3NyYy91dGlsL0NvbG9yLnRzPzY0MzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlCQUFpQjtBQUNWLE1BQU0sS0FBSztJQUVkLFlBQVksS0FBYztRQUN0QiwyREFBMkQ7UUFDM0QsSUFBRyxLQUFLLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxHQUFHLEVBQUM7WUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7U0FDdEI7YUFDRztZQUNBLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7SUFDRCw0QkFBNEI7SUFDckIsV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBRUQsc0JBQXNCO0lBQ2YsUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCx3R0FBd0c7SUFDakcsV0FBVyxDQUFDLEdBQVc7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7SUFDckIsQ0FBQztDQUNKIiwiZmlsZSI6Ii4vc3JjL3V0aWwvQ29sb3IudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL3RoZSBjb2xvciBjbGFzc1xyXG5leHBvcnQgY2xhc3MgQ29sb3J7XHJcbiAgICBwcml2YXRlIGNvbG9yOiBudW1iZXI7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb2xvcj86IG51bWJlcil7XHJcbiAgICAgICAgLy9jaGFja2luZyBpZiB0aGUgdmFsdWUgc3BlY2lmaWVkIGlzIHdpdGhpbiB0aGUgY29sb3IgcmFuZ2VcclxuICAgICAgICBpZihjb2xvciA+PSAwICYmIGNvbG9yIDw9IDI1NSl7XHJcbiAgICAgICAgICAgIHRoaXMuY29sb3IgPSBjb2xvcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDb2xvciB2YWx1ZSBzcGVjaWZpZWQgZXhjZWVkcyBib3VuZHMuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vZ2V0IHRoZSBWQUxVRSBvZiB0aGUgY29sb3JcclxuICAgIHB1YmxpYyBnZXRDb2xvclZhbCgpOiBudW1iZXJ7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sb3I7XHJcbiAgICB9IFxyXG5cclxuICAgIC8vZ2V0IHRoZSBjb2xvciBPQkpFQ1RcclxuICAgIHB1YmxpYyBnZXRDb2xvcigpOiBDb2xvcntcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvL3RoZXJlIGlzIG9ubHkgYSBjb2xvciBWQUxVRSBzZXR0ZXIgbWV0aG9kIGFzIEkgZG9udCB0aGluayB1IGNhbiBjaGFuZ2UgdGhlIG9iamVjdCBpdHNlbGYuLiAtXFxfKF52XilfLy1cclxuICAgIHB1YmxpYyBzZXRDb2xvclZhbCh2YWw6IG51bWJlcik6IHZvaWR7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IHZhbDtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/util/Color.ts\n");

/***/ }),

/***/ "./src/util/Light.ts":
/*!***************************!*\
  !*** ./src/util/Light.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Light\": () => (/* binding */ Light)\n/* harmony export */ });\nclass Light {\r\n    constructor(position, luminanceValue) {\r\n        this.position = position;\r\n        this.minLuminanceValue = 0;\r\n        this.maxLuminanceValue = 10;\r\n        if (luminanceValue >= this.minLuminanceValue && luminanceValue <= this.maxLuminanceValue) {\r\n            this.luminanceValue = luminanceValue;\r\n        }\r\n        else {\r\n            throw new Error(\"Invalid light luminance value specified.\");\r\n        }\r\n    }\r\n    //GETTERS\r\n    //POSITIONS\r\n    getPosition() {\r\n        return this.position;\r\n    }\r\n    getPositionX() {\r\n        return this.position.getX();\r\n    }\r\n    getPositionY() {\r\n        return this.position.getY();\r\n    }\r\n    getLuminanceValue() {\r\n        return this.luminanceValue;\r\n    }\r\n    getMinLuminanceValue() {\r\n        return this.minLuminanceValue;\r\n    }\r\n    getMaxLuminanceValue() {\r\n        return this.maxLuminanceValue;\r\n    }\r\n    //SETTERS\r\n    setPosition(vec) {\r\n        this.position.setX(vec.getX());\r\n        this.position.setY(vec.getY());\r\n    }\r\n    setPositionX(x) {\r\n        this.position.setX(x);\r\n    }\r\n    setPositionY(y) {\r\n        this.position.setY(y);\r\n    }\r\n    setLuminanceValue(val) {\r\n        if (val >= 0 && val <= 10) {\r\n            this.luminanceValue = val;\r\n        }\r\n        else {\r\n            throw new Error(\"Invalid light luminance value specified while setting.\");\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8yZC1ibGluZC1tYXplcy8uL3NyYy91dGlsL0xpZ2h0LnRzPzhhN2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVPLE1BQU0sS0FBSztJQU1kLFlBQVksUUFBZ0IsRUFBRSxjQUFzQjtRQUNoRCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxFQUFFLENBQUM7UUFFNUIsSUFBRyxjQUFjLElBQUksSUFBSSxDQUFDLGlCQUFpQixJQUFJLGNBQWMsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUM7WUFDcEYsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7U0FDeEM7YUFBSTtZQUNELE1BQU0sSUFBSSxLQUFLLENBQUMsMENBQTBDLENBQUMsQ0FBQztTQUMvRDtJQUNMLENBQUM7SUFFRCxTQUFTO0lBRVQsV0FBVztJQUNKLFdBQVc7UUFDZCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUNNLFlBQVk7UUFDZixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUNNLFlBQVk7UUFDZixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUNNLGlCQUFpQjtRQUNwQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDL0IsQ0FBQztJQUVNLG9CQUFvQjtRQUN2QixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNsQyxDQUFDO0lBQ00sb0JBQW9CO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO0lBQ2xDLENBQUM7SUFHRCxTQUFTO0lBQ0YsV0FBVyxDQUFDLEdBQVc7UUFDMUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNNLFlBQVksQ0FBQyxDQUFTO1FBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFDTSxZQUFZLENBQUMsQ0FBUztRQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBQ00saUJBQWlCLENBQUMsR0FBVztRQUNoQyxJQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLEVBQUUsRUFBQztZQUNyQixJQUFJLENBQUMsY0FBYyxHQUFHLEdBQUcsQ0FBQztTQUM3QjthQUFJO1lBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyx3REFBd0QsQ0FBQyxDQUFDO1NBQzdFO0lBQ0wsQ0FBQztDQUNKIiwiZmlsZSI6Ii4vc3JjL3V0aWwvTGlnaHQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWN0b3IgfSBmcm9tIFwiLi9WZWN0b3JcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBMaWdodHtcclxuICAgIHByaXZhdGUgcG9zaXRpb246IFZlY3RvcjtcclxuICAgIHByaXZhdGUgbHVtaW5hbmNlVmFsdWU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgbWF4THVtaW5hbmNlVmFsdWU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgbWluTHVtaW5hbmNlVmFsdWU6IG51bWJlcjtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IocG9zaXRpb246IFZlY3RvciwgbHVtaW5hbmNlVmFsdWU6IG51bWJlcil7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHBvc2l0aW9uO1xyXG4gICAgICAgIHRoaXMubWluTHVtaW5hbmNlVmFsdWUgPSAwO1xyXG4gICAgICAgIHRoaXMubWF4THVtaW5hbmNlVmFsdWUgPSAxMDtcclxuXHJcbiAgICAgICAgaWYobHVtaW5hbmNlVmFsdWUgPj0gdGhpcy5taW5MdW1pbmFuY2VWYWx1ZSAmJiBsdW1pbmFuY2VWYWx1ZSA8PSB0aGlzLm1heEx1bWluYW5jZVZhbHVlKXtcclxuICAgICAgICAgICAgdGhpcy5sdW1pbmFuY2VWYWx1ZSA9IGx1bWluYW5jZVZhbHVlO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGxpZ2h0IGx1bWluYW5jZSB2YWx1ZSBzcGVjaWZpZWQuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvL0dFVFRFUlNcclxuXHJcbiAgICAvL1BPU0lUSU9OU1xyXG4gICAgcHVibGljIGdldFBvc2l0aW9uKCk6IFZlY3RvcntcclxuICAgICAgICByZXR1cm4gdGhpcy5wb3NpdGlvbjtcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXRQb3NpdGlvblgoKTogbnVtYmVye1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBvc2l0aW9uLmdldFgoKTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXRQb3NpdGlvblkoKTogbnVtYmVye1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBvc2l0aW9uLmdldFkoKTtcclxuICAgIH0gICAgXHJcbiAgICBwdWJsaWMgZ2V0THVtaW5hbmNlVmFsdWUoKTogbnVtYmVye1xyXG4gICAgICAgIHJldHVybiB0aGlzLmx1bWluYW5jZVZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRNaW5MdW1pbmFuY2VWYWx1ZSgpOiBudW1iZXJ7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWluTHVtaW5hbmNlVmFsdWU7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZ2V0TWF4THVtaW5hbmNlVmFsdWUoKTogbnVtYmVye1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1heEx1bWluYW5jZVZhbHVlO1xyXG4gICAgfVxyXG4gICAgXHJcblxyXG4gICAgLy9TRVRURVJTXHJcbiAgICBwdWJsaWMgc2V0UG9zaXRpb24odmVjOiBWZWN0b3Ipe1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24uc2V0WCh2ZWMuZ2V0WCgpKTtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uLnNldFkodmVjLmdldFkoKSk7ICAgICAgICBcclxuICAgIH1cclxuICAgIHB1YmxpYyBzZXRQb3NpdGlvblgoeDogbnVtYmVyKXtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uLnNldFgoeCk7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgc2V0UG9zaXRpb25ZKHk6IG51bWJlcil7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbi5zZXRZKHkpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHNldEx1bWluYW5jZVZhbHVlKHZhbDogbnVtYmVyKXtcclxuICAgICAgICBpZih2YWwgPj0gMCAmJiB2YWwgPD0gMTApe1xyXG4gICAgICAgICAgICB0aGlzLmx1bWluYW5jZVZhbHVlID0gdmFsO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGxpZ2h0IGx1bWluYW5jZSB2YWx1ZSBzcGVjaWZpZWQgd2hpbGUgc2V0dGluZy5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/util/Light.ts\n");

/***/ }),

/***/ "./src/util/Vector.ts":
/*!****************************!*\
  !*** ./src/util/Vector.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vector\": () => (/* binding */ Vector)\n/* harmony export */ });\n//Vector class for ease of calcuations in the future 😎\r\nclass Vector {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    //simple add, subtract, multiply and division methods\r\n    //➕\r\n    add(vec) {\r\n        this.x += vec.x;\r\n        this.y += vec.y;\r\n    }\r\n    //➖\r\n    sub(vec) {\r\n        this.x -= vec.x;\r\n        this.y -= vec.y;\r\n    }\r\n    //✖\r\n    mul(vec) {\r\n        this.x *= vec.x;\r\n        this.y *= vec.y;\r\n    }\r\n    //➗\r\n    div(vec) {\r\n        this.x /= vec.x;\r\n        this.y /= vec.y;\r\n    }\r\n    //getters\r\n    getX() {\r\n        return this.x;\r\n    }\r\n    getY() {\r\n        return this.y;\r\n    }\r\n    //setters\r\n    setX(x) {\r\n        this.x = x;\r\n    }\r\n    setY(y) {\r\n        this.y = y;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8yZC1ibGluZC1tYXplcy8uL3NyYy91dGlsL1ZlY3Rvci50cz80Mzk1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSx1REFBdUQ7QUFDaEQsTUFBTSxNQUFNO0lBSWpCLFlBQVksQ0FBUyxFQUFFLENBQVM7UUFDOUIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNiLENBQUM7SUFDRCxxREFBcUQ7SUFFckQsR0FBRztJQUNJLEdBQUcsQ0FBQyxHQUFXO1FBQ3BCLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNoQixJQUFJLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFbEIsQ0FBQztJQUVELEdBQUc7SUFDSSxHQUFHLENBQUMsR0FBVztRQUNwQixJQUFJLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDaEIsSUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFFRCxHQUFHO0lBQ0ksR0FBRyxDQUFDLEdBQVc7UUFDcEIsSUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNsQixDQUFDO0lBRUQsR0FBRztJQUNJLEdBQUcsQ0FBQyxHQUFXO1FBQ3BCLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNoQixJQUFJLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDbEIsQ0FBQztJQUVELFNBQVM7SUFDRixJQUFJO1FBQ1QsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2hCLENBQUM7SUFDTSxJQUFJO1FBQ1QsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2hCLENBQUM7SUFFRCxTQUFTO0lBQ0YsSUFBSSxDQUFDLENBQVM7UUFDbkIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDYixDQUFDO0lBQ00sSUFBSSxDQUFDLENBQVM7UUFDbkIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDYixDQUFDO0NBRUYiLCJmaWxlIjoiLi9zcmMvdXRpbC9WZWN0b3IudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL1ZlY3RvciBjbGFzcyBmb3IgZWFzZSBvZiBjYWxjdWF0aW9ucyBpbiB0aGUgZnV0dXJlIPCfmI5cclxuZXhwb3J0IGNsYXNzIFZlY3RvcntcclxuICBwcml2YXRlIHg6IG51bWJlcjtcclxuICBwcml2YXRlIHk6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIpe1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgfVxyXG4gIC8vc2ltcGxlIGFkZCwgc3VidHJhY3QsIG11bHRpcGx5IGFuZCBkaXZpc2lvbiBtZXRob2RzXHJcblxyXG4gIC8v4p6VXHJcbiAgcHVibGljIGFkZCh2ZWM6IFZlY3Rvcik6IHZvaWR7XHJcbiAgICB0aGlzLnggKz0gdmVjLng7XHJcbiAgICB0aGlzLnkgKz0gdmVjLnk7XHJcblxyXG4gIH1cclxuXHJcbiAgLy/inpZcclxuICBwdWJsaWMgc3ViKHZlYzogVmVjdG9yKTogdm9pZHtcclxuICAgIHRoaXMueCAtPSB2ZWMueDtcclxuICAgIHRoaXMueSAtPSB2ZWMueTtcclxuICB9XHJcblxyXG4gIC8v4pyWXHJcbiAgcHVibGljIG11bCh2ZWM6IFZlY3Rvcik6IHZvaWR7XHJcbiAgICB0aGlzLnggKj0gdmVjLng7XHJcbiAgICB0aGlzLnkgKj0gdmVjLnk7XHJcbiAgfVxyXG5cclxuICAvL+Kel1xyXG4gIHB1YmxpYyBkaXYodmVjOiBWZWN0b3IpOiB2b2lke1xyXG4gICAgdGhpcy54IC89IHZlYy54O1xyXG4gICAgdGhpcy55IC89IHZlYy55O1xyXG4gIH1cclxuXHJcbiAgLy9nZXR0ZXJzXHJcbiAgcHVibGljIGdldFgoKTogbnVtYmVye1xyXG4gICAgcmV0dXJuIHRoaXMueDtcclxuICB9XHJcbiAgcHVibGljIGdldFkoKTogbnVtYmVye1xyXG4gICAgcmV0dXJuIHRoaXMueTtcclxuICB9XHJcblxyXG4gIC8vc2V0dGVyc1xyXG4gIHB1YmxpYyBzZXRYKHg6IG51bWJlcik6IHZvaWR7XHJcbiAgICB0aGlzLnggPSB4O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0WSh5OiBudW1iZXIpOiB2b2lke1xyXG4gICAgdGhpcy55ID0geTtcclxuICB9XHJcbiAgXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/util/Vector.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;